- show_empty_sections ||= false
- remove_automatic_sections ||= false
- hide_sections ||= []
- sections = [  |
  {:yield => :body_content_title, :fallback => page_title, :id => 'body_content_page_title', :title => true},  |
  {:yield => :body_content_right, :fallback => (@page.present? ? @page[Page.default_parts.second.to_sym] : nil)},  |
  {:yield => :body_content_left, :fallback => (@page.present? ? @page[Page.default_parts.first.to_sym] : nil)},  |
  ].reject {|section| hide_sections.include?(section[:yield]) }  |
- css = []
- sections.each do |section|
  - dom_id = (section[:id] ||= section[:yield].to_s)
  - section[:html] = (yield(section[:yield]))
  - if section[:html].blank? and  |
        !show_empty_sections and  |
        !remove_automatic_sections and  |
        section.keys.include?(:fallback) and  |
        section[:fallback].present?  |
    - section[:html] = section[:fallback].to_s.html_safe
  - unless section[:html].blank?
    -# see application_helper.rb for select_outer_div and choose_body_floats
  
    - unless section[:title]
      - section[:html] = "#{select_outer_div( section[:yield] )} <div class='clearfix' id='#{dom_id}'>#{section[:html]} </div> </div>"
    - else
      - section[:html] = "<div id = 'body_content_title' style = 'float: #{choose_body_floats( section[:yield] )};'> <h1 id='#{dom_id}'>#{section[:html]}</h1> </div>"
  - else
    - css << "no_#{dom_id}"
    
- class_list = "clearfix#{" #{css.join(' ')}" if css.any?}"

#body_content{ :class => class_list }
  - sections.each do |s|
    = s[:html].to_s.html_safe
= render :partial => '/shared/draft_page_message' unless @page.nil? or @page.live?
