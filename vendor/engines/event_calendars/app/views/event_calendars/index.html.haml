- content_for :body_content_left do
  #mycal
    -# 
      %h3 wild blue
      %p
        = EventCalendar.get_remote_events( RefinerySetting.find_or_set( :event_calendar_url, "event_calendar_url") )

  :javascript
    /**
     * Initializes calendar.
     */
    var jfcalplugin = $("#mycal").jFrontierCal({
            date: new Date(),
            dayClickCallback: myDayClickHandler,
            agendaClickCallback: myAgendaClickHandler,
            agendaDropCallback: myAgendaDropHandler,
            // agendaMouseoverCallback: myAgendaMouseoverHandler,
            applyAgendaTooltipCallback: myApplyTooltip,
            agendaDragStartCallback : myAgendaDragStart,
            agendaDragStopCallback : myAgendaDragStop,
            dragAndDropEnabled: true
    }).data("plugin");
    
    function myDayClickHandler(eventObj){
            var date = eventObj.data.calDayDate;
            alert("You clicked day " + date.toDateString());
    };
    function myAgendaClickHandler (eventObj){
            var agendaId = eventObj.data.agendaId;
    };
    function myAgendaDropHandler(eventObj){
            var agendaId = eventObj.data.agendaId;
            var date = eventObj.data.calDayDate;		
            var agendaItem = jfcalplugin.getAgendaItemById("#mycal",agendaId);		
            /**
            * alert("You dropped agenda item " + agendaItem.title + 
            *        " onto " + date.toString() + ". Here is where you can make an AJAX call to update your database.");
            */
    };	
    
    /**
     * Do something when dragging starts on agenda div
     */
    function myAgendaDragStart(eventObj,divElm,agendaItem){
            // destroy our qtip tooltip
            if(divElm.data("qtip")){
                    divElm.qtip("destroy");
            }	
    };

    /**
     * Do something when dragging stops on agenda div
     */
    function myAgendaDragStop(eventObj,divElm,agendaItem){
            //alert("drag stop");
    };

    function timeClean(time) {
      var str = time.toLocaleTimeString();
      return str.replace(/:00$/,"")
    };

    /**
     * Custom tooltip - use any tooltip library you want to display the agenda data.
     *
     * For this example we use qTip - http://craigsworks.com/projects/qtip/
     *
     * @param divElm - jquery object for agenda div element
     * @param agendaItem - javascript object containing agenda data.
     */
    function myApplyTooltip(divElm,agendaItem){

            // Destroy currrent tooltip if present
            if(divElm.data("qtip")){
                    divElm.qtip("destroy");
            }
            
            var displayData = "";
            
            var title = agendaItem.title;
            var startDate = agendaItem.startDate;
            var endDate = agendaItem.endDate;
            var allDay = agendaItem.allDay;
            var data = agendaItem.data;
            displayData += "<br><b>" + title+ "</b><br><br>";
            if(allDay){
                    displayData += "(All day event)<br><br>";
            }else{
                    displayData += "<b>Date:</b> "   + startDate.toDateString()  + "<br>";
                    displayData += "<b>Starts:</b> " + timeClean(startDate) + "<br>" + "<b>Ends:</b> " + timeClean(endDate) + "<br><br>";
            }
            displayData += "<b>Detail:</b> "      + data["DESCRIPTION"].replace(/\\n/g,", ")   + "<br>";
            displayData += "<b>Location:</b> "    + data["LOCATION"].replace(/\\,/g,", ")      + "<br>";
            displayData += "<b>Contact:</b> "     + data["CONTACT"]                          + "<br>";
            displayData += "<b>URL:</b> "         + data["URL"]                              + "<br>";

            /**
             * for (var propertyName in data) {
             *       displayData += "<b>" + propertyName + ":</b> " + data[propertyName] + "<br>"
             *}
             */

            // apply tooltip
            divElm.qtip({
                    content: displayData,
                    position: {
                            corner: {
                                    tooltip: "bottomMiddle",
                                    target: "topMiddle"			
                            },
                            adjust: { 
                                    mouse: true,
                                    x: 0,
                                    y: -15
                            },
                            target: "mouse"
                    },
                    show: { 
                            when: { 
                                    event: 'mouseover'
                            }
                    },
                    style: {
                            border: {
                                    width: 2,
                                    radius: 5
                            },
                            padding: 5, 
                            textAlign: "left",
                            tip: true,
                            name: "dark"
                    }
            });

       };

    jfcalplugin.loadICalSource("#mycal","#{get_events_event_calendars_path}","html"); 

= render :partial => "/shared/content_page"
